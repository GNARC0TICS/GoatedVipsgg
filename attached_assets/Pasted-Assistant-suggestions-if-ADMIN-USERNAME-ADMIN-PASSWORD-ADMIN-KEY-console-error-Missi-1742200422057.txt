Assistant suggestions
if (!ADMIN_USERNAME || !ADMIN_PASSWORD || !ADMIN_KEY) {
  console.error('Missing required admin environment variables');
}
const ADMIN_USERNAME = process.env.ADMIN_USERNAME;
const ADMIN_PASSWORD = process.env.ADMIN_PASSWORD;
const ADMIN_KEY = process.env.ADMIN_SECRET_KEY;

if (!ADMIN_USERNAME || !ADMIN_PASSWORD || !ADMIN_KEY) {
  console.warn('Admin functionality will be disabled due to missing environment variables');
}
// In production, we need to use port 80 since that's what the deployment expects
// The .replit file maps internal port 80 -> external port 80 for the API
// and internal port 5173 -> external port 3000 for the frontend

async function setupMiddleware() {
// In production, we need to use port 80 since that's what the deployment expects
// The .replit file maps internal port 5173 -> external port 80 for the frontend display
// and internal port 3000 -> external port 3000 for the API

async function setupMiddleware() {
// Start server immediately in production
if (process.env.NODE_ENV === 'production') {
  const server = app.listen(PORT, '0.0.0.0', () => {
    log(`Backend API running on port ${PORT} (http://0.0.0.0:${PORT})`);
    log('Frontend served through Vite on port 5173 in development');
  });
}
// Remove this production server start since we're using the proper startServer function below
// We should only have one server listening on PORT in production
  // Then register routes
  registerRoutes(app);
  initializeAdmin().catch(console.error);

  if (app.get("env") === "development") {
    await setupVite(app, server);
  } else {
    serveStatic(app);
  }
  // Then register routes
  registerRoutes(app);
  initializeAdmin().catch(error => {
    log('Admin initialization error: ' + error.message);
  });

  if (app.get("env") === "development") {
    await setupVite(app, server);
  } else {
    serveStatic(app);
    log('Static frontend content served in production mode');
  }
[[ports]]
localPort = 5173
externalPort = 80
exposeLocalhost = true

[[ports]]
localPort = 3000
externalPort = 3000
exposeLocalhost = true
[[ports]]
localPort = 80
externalPort = 80
exposeLocalhost = true
